{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Aluno/teste/front/src/app/components/modals/modal.tsx"],"sourcesContent":["import React, { ReactNode } from 'react';\r\n\r\ntype ModalProps = {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  children: ReactNode;\r\n};\r\n\r\nexport default function Modal({ isOpen, onClose, children }: ModalProps) {\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"modal-backdrop\" onClick={onClose}>\r\n      <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\r\n        <button className=\"close-btn\" onClick={onClose}>×</button>\r\n        {children}\r\n      </div>\r\n\r\n      <style jsx>{`\r\n        .modal-backdrop {\r\n          position: fixed;\r\n          top: 0; left: 0; right: 0; bottom: 0;\r\n          background: rgba(0, 0, 0, 0.5);\r\n          display: flex; align-items: center; justify-content: center;\r\n          z-index: 1000;\r\n        }\r\n        .modal-content {\r\n          background: white;\r\n          padding: 20px;\r\n          border-radius: 8px;\r\n          position: relative;\r\n          max-width: 500px;\r\n          width: 90%;\r\n        }\r\n        .close-btn {\r\n          position: absolute;\r\n          top: 10px; right: 10px;\r\n          background: none; border: none;\r\n          font-size: 1.5rem; cursor: pointer;\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;;;AAQe,SAAS,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAc;IACrE,IAAI,CAAC,QAAQ,OAAO;IAEpB,qBACE,8OAAC;QAA+B,SAAS;kDAA1B;;0BACb,8OAAC;gBAA8B,SAAS,CAAC,IAAM,EAAE,eAAe;0DAAjD;;kCACb,8OAAC;wBAA6B,SAAS;kEAArB;kCAA8B;;;;;;oBAC/C;;;;;;;;;;;;;;;;;AA4BT","debugId":null}},
    {"offset": {"line": 57, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Aluno/teste/front/src/app/components/modals/addItemmodal.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react';\nimport Modal from './modal';\nimport {useForm} from \"react-hook-form\"\n\n\ntype inputs = {\n  nome: string\n  peso: number\n  \n}\n\n\n\nexport default function ItemModal() {\n  const [isOpen, setIsOpen] = useState(false);\n  const { register, handleSubmit } = useForm<inputs>()    \n \n\n  \n\n  async function tryinput(data: inputs) {\n    try {\n      const response = await fetch(`${process.env.NEXT_PUBLIC_URL_API}/alimentos`, {\n        headers: { \"Content-Type\": \"application/json\" },\n        method: \"POST\",\n        body: JSON.stringify({ nome: data.nome, peso: data.peso }),\n      });\n  \n      if (!response.ok) {\n        const errorData = await response.json();\n        console.error(\"Erro ao enviar:\", errorData);\n      } else {\n        console.log(\"Item enviado com sucesso!\");\n      }\n    } catch (error) {\n      console.error(\"Erro de rede ou outra falha:\", error);\n    }\n  }\n  \n\n\nreturn (\n    <>\n    \n      <button className=\"px-4 py-2 bg-[#2c2c2c] text-[#ffffff] rounded-md hover:bg-[#1e1e1e] font-medium\"onClick={() => setIsOpen(true)}>Adicione um item</button>\n      <Modal isOpen={isOpen} onClose={() => setIsOpen(false)}>\n        \n    <form onSubmit={handleSubmit(tryinput)}>\n      <label className=\"block text-sm font-medium text-gray-700\">\n        Nome do alimento\n      </label>\n      <input\n        className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring focus:ring-blue-500 focus:ring-opacity-50\"\n        id='nome'\n        type='text'\n        required {...register('nome')}\n      />\n      <label className=\"block text-sm font-medium text-gray-700\">\n        Qtd\\Kg\n      </label>\n      <input\n        className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring focus:ring-blue-500 focus:ring-opacity-50\"\n        id='peso'\n        type='number'\n        required {...register('peso')}\n      />\n      <button\n        type=\"submit\"\n        className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\"\n      >\n        Enviar item\n      </button>\n    </form>\n      </Modal>\n     \n    </>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAee,SAAS;IACtB,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,EAAE,QAAQ,EAAE,YAAY,EAAE,GAAG,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD;IAKzC,eAAe,SAAS,IAAY;QAClC,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,6DAAmC,UAAU,CAAC,EAAE;gBAC3E,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9C,QAAQ;gBACR,MAAM,KAAK,SAAS,CAAC;oBAAE,MAAM,KAAK,IAAI;oBAAE,MAAM,KAAK,IAAI;gBAAC;YAC1D;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,YAAY,MAAM,SAAS,IAAI;gBACrC,QAAQ,KAAK,CAAC,mBAAmB;YACnC,OAAO;gBACL,QAAQ,GAAG,CAAC;YACd;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,gCAAgC;QAChD;IACF;IAIF,qBACI;;0BAEE,8OAAC;gBAAO,WAAU;gBAAiF,SAAS,IAAM,UAAU;0BAAO;;;;;;0BACnI,8OAAC,4IAAA,CAAA,UAAK;gBAAC,QAAQ;gBAAQ,SAAS,IAAM,UAAU;0BAElD,cAAA,8OAAC;oBAAK,UAAU,aAAa;;sCAC3B,8OAAC;4BAAM,WAAU;sCAA0C;;;;;;sCAG3D,8OAAC;4BACC,WAAU;4BACV,IAAG;4BACH,MAAK;4BACL,QAAQ;4BAAE,GAAG,SAAS,OAAO;;;;;;sCAE/B,8OAAC;4BAAM,WAAU;sCAA0C;;;;;;sCAG3D,8OAAC;4BACC,WAAU;4BACV,IAAG;4BACH,MAAK;4BACL,QAAQ;4BAAE,GAAG,SAAS,OAAO;;;;;;sCAE/B,8OAAC;4BACC,MAAK;4BACL,WAAU;sCACX;;;;;;;;;;;;;;;;;;;AAQP","debugId":null}},
    {"offset": {"line": 178, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Aluno/teste/front/src/app/dispensa/page.tsx"],"sourcesContent":["\"use client\"\nimport Image from \"next/image\"\nimport { User, Twitter, Instagram, Youtube, Linkedin } from \"lucide-react\"\nimport ItemModal from \"../components/modals/addItemmodal\"\nimport { useClienteStore } from \"../context/ClienteContext\"\nimport { useEffect, useState } from \"react\"\nimport { AlimentosItf } from \"../utils/types/AlimentosItf\"\nimport { useParams } from \"next/navigation\"\n\n\nexport default function instancia() {\n  const [alimentos, setPropostas] = useState<AlimentosItf[]>([])\n  const params = useParams()\n\n  useEffect(() => {\n    async function buscaDados() {\n      const response = await fetch(`${process.env.NEXT_PUBLIC_URL_API}/alimentos`)\n      const dados = await response.json()\n      setPropostas(dados)\n    }\n    buscaDados()\n  }, [])\n\n\n  return (\n    <div className=\"min-h-screen bg-[#ffffff]\">\n     \n{/* Main Content */}\n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8 mb-12\">\n          {/* Left side - Image */}\n          <div>\n            <Image\n              src=\"/donald.jpg\"\n              alt=\"McDonald's Restaurant\"\n              width={200}\n              height={150}\n              className=\"w-[400px] h-auto rounded-lg\"\n            />\n          </div>\n\n          {/* Right side - Content */}\n          <div className=\"space-y-6\">\n            <h1 className=\"text-4xl font-bold text-[#000000]\">Totalmente não é um MC</h1>\n\n            <input\n              type=\"text\"\n              placeholder=\"Isso aqui não é um mcdonalds... eu juro\"\n              className=\"w-full px-3 py-2 border border-[#d9d9d9] rounded-md focus:outline-none focus:ring-2 focus:ring-[#000000] focus:border-transparent\"\n            />\n\n            <div className=\"grid grid-cols-2 gap-4\">\n            <ItemModal />\n              <button className=\"px-4 py-2 bg-[#2c2c2c] text-[#ffffff] rounded-md hover:bg-[#1e1e1e] font-medium\">\n                Remover Item\n              </button>\n              <button className=\"px-4 py-2 bg-[#2c2c2c] text-[#ffffff] rounded-md hover:bg-[#1e1e1e] font-medium\">\n                Config Instancia\n              </button>\n              <button className=\"px-4 py-2 bg-[#2c2c2c] text-[#ffffff] rounded-md hover:bg-[#1e1e1e] font-medium\">\n                Adicionar Funcionário\n              </button>\n            </div>\n          </div>\n        </div>\n\n        {/* Two Column Layout */}\n        <div\n          className=\"grid grid-cols-1 lg:grid-cols-2 gap-8 p-8 rounded-lg\"\n          style={{\n            backgroundImage: `url(\"data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fillRule='evenodd'%3E%3Cg fill='%23cff7d3' fillOpacity='0.3'%3E%3Cpath d='M36 34v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zm0-30V0h-2v4h-4v2h4v4h2V6h4V4h-4zM6 34v-4H4v4H0v2h4v4h2v-4h4v-2H6zM6 4V0H4v4H0v2h4v4h2V6h4V4H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\")`,\n            backgroundColor: \"#cff7d3\",\n          }}\n        >\n          {/* Left Column - Funcionários */}\n          <div>\n            <h2 className=\"text-2xl font-bold text-[#02542d] mb-6\">Funcionários</h2>\n            <div className=\"space-y-4\">\n              {[\"Cozinheiro1\", \"Cozinheiro2\", \"Cozinheiro3\", \"Cozinheiro4\", \"Cozinheiro5\"].map((cook, index) => (\n                <div key={index} className=\"flex items-center space-x-3 bg-[#ffffff] p-3 rounded-lg\">\n                  <User className=\"w-5 h-5 text-[#757575]\" />\n                  <span className=\"text-[#000000] font-medium\">{cook}</span>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Right Column - Seu estoque */}\n          <div>\n            <h2 className=\"text-2xl font-bold text-[#02542d] mb-6\">Seu estoque</h2>\n            <div className=\"bg-[#ffffff] p-4 rounded-lg\">\n           <div className=\"grid grid-cols-3 gap-2 text-sm font-semibold text-[#000000] mb-3 border-b border-[#e3e3e3] pb-2\">\n          <span>items</span>\n          <span className=\"text-center\">qtd/Kg</span>\n          <span className=\"text-right\">Kg</span>\n        </div>\n             \n             <div className=\"space-y-1 text-sm\">\n            {alimentos.map((alimento) => (\n            <div key={alimento.id} className=\"grid grid-cols-3 gap-2 py-1\">\n              <span className=\"text-[#000000]\">{alimento.nome}</span>\n              <span className=\"text-center text-[#757575]\"></span>\n              <span className=\"text-right text-[#000000]\">{alimento.peso}Kg</span>\n            </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n\n      </div>\n  )\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AAEA;AAEA;AAPA;;;;;;;AAUe,SAAS;IACtB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAkB,EAAE;IAC7D,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,eAAe;YACb,MAAM,WAAW,MAAM,MAAM,6DAAmC,UAAU,CAAC;YAC3E,MAAM,QAAQ,MAAM,SAAS,IAAI;YACjC,aAAa;QACf;QACA;IACF,GAAG,EAAE;IAGL,qBACE,8OAAC;QAAI,WAAU;kBAGb,cAAA,8OAAC;YAAK,WAAU;;8BACd,8OAAC;oBAAI,WAAU;;sCAEb,8OAAC;sCACC,cAAA,8OAAC,6HAAA,CAAA,UAAK;gCACJ,KAAI;gCACJ,KAAI;gCACJ,OAAO;gCACP,QAAQ;gCACR,WAAU;;;;;;;;;;;sCAKd,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAG,WAAU;8CAAoC;;;;;;8CAElD,8OAAC;oCACC,MAAK;oCACL,aAAY;oCACZ,WAAU;;;;;;8CAGZ,8OAAC;oCAAI,WAAU;;sDACf,8OAAC,mJAAA,CAAA,UAAS;;;;;sDACR,8OAAC;4CAAO,WAAU;sDAAkF;;;;;;sDAGpG,8OAAC;4CAAO,WAAU;sDAAkF;;;;;;sDAGpG,8OAAC;4CAAO,WAAU;sDAAkF;;;;;;;;;;;;;;;;;;;;;;;;8BAQ1G,8OAAC;oBACC,WAAU;oBACV,OAAO;wBACL,iBAAiB,CAAC,+WAA+W,CAAC;wBAClY,iBAAiB;oBACnB;;sCAGA,8OAAC;;8CACC,8OAAC;oCAAG,WAAU;8CAAyC;;;;;;8CACvD,8OAAC;oCAAI,WAAU;8CACZ;wCAAC;wCAAe;wCAAe;wCAAe;wCAAe;qCAAc,CAAC,GAAG,CAAC,CAAC,MAAM,sBACtF,8OAAC;4CAAgB,WAAU;;8DACzB,8OAAC,kMAAA,CAAA,OAAI;oDAAC,WAAU;;;;;;8DAChB,8OAAC;oDAAK,WAAU;8DAA8B;;;;;;;2CAFtC;;;;;;;;;;;;;;;;sCAShB,8OAAC;;8CACC,8OAAC;oCAAG,WAAU;8CAAyC;;;;;;8CACvD,8OAAC;oCAAI,WAAU;;sDAChB,8OAAC;4CAAI,WAAU;;8DAChB,8OAAC;8DAAK;;;;;;8DACN,8OAAC;oDAAK,WAAU;8DAAc;;;;;;8DAC9B,8OAAC;oDAAK,WAAU;8DAAa;;;;;;;;;;;;sDAG1B,8OAAC;4CAAI,WAAU;sDACf,UAAU,GAAG,CAAC,CAAC,yBAChB,8OAAC;oDAAsB,WAAU;;sEAC/B,8OAAC;4DAAK,WAAU;sEAAkB,SAAS,IAAI;;;;;;sEAC/C,8OAAC;4DAAK,WAAU;;;;;;sEAChB,8OAAC;4DAAK,WAAU;;gEAA6B,SAAS,IAAI;gEAAC;;;;;;;;mDAHnD,SAAS,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAcjC","debugId":null}}]
}